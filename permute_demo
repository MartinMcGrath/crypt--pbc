#!/usr/bin/perl
# vi:tw=0:

use strict;
use Carp;

SCOPE: {
    my @src = ( 0 .. 1 );
    my $num = 5;

    print "length $num:\n";
    print "\t[$num]: @$_\n" for &permute($num, @src);
    print "\n";
}

sub _permute {
    my $num = shift;
    my $arr = shift;
    my $src = shift;

    unshift @$_, $src->[0] for @$arr;

    my $e = $#{ $arr };
    for my $i (1 .. $#$src) {
        for my $j (0 .. $e) {
            my $t = [@{ $arr->[$j] }];
            
            $t->[0] = $i;

            push @$arr, $t;
        }
    }

    &_permute( $num-1, $arr, $src ) if $num > 1;
}

sub permute {
    my $num = shift; croak "dumb number" unless $num > 0;
    my @a = map {[$_]} @_;

    &_permute( $num-1, \@a, \@_ ) if $num > 1;

    return @a;
}
